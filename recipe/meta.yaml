{% set name = "h5py" %}
{% set version = "3.14.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name }}/archive/{{ version }}.tar.gz
  sha256: 4937c1cbef049fd28973494def11084b70c1d218c6898a9d8cfb471c84010a99
  patches:
    - patches/0001-fix-license-in-pyproject.toml.patch

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: true  # [py<39]

requirements:
  build:
    - patch  # [not win]
    - m2-patch  # [win]
    - {{ compiler("c") }}
  host:
    - python
    - cython >=0.29.31,<4
    - hdf5 {{ hdf5 }}
    - numpy {{ numpy }}
    - pip
    - pkgconfig
    # Decrease setuptools version due to numpy run_constrained: https://github.com/AnacondaRecipes/numpy-feedstock/blob/master/recipe/meta.yaml#L63
    # Upstream requirement is 'setuptools >=77'
    - setuptools <74
    - wheel
    # Adjust pinning based on available verions of mpi4py
    # Upstream: mpi4py ==3.1.1; python_version<'3.11'
    - mpi4py <=3.1.4  # [py<311]
    # Upstream: mpi4py ==3.1.4; python_version=='3.11.*'
    - mpi4py ==3.1.4  # [py==311]
    # Upstream: mpi4py ==3.1.6; python_version=='3.12.*'
    # Upstream: mpi4py ==4.0.1; python_version>='3.13'
    - mpi4py >3.1.4  # [py>311]
  run:
    - python
    - hdf5
    - numpy >=1.19.3
    - mpi4py >=3.1.1

# Failed: DID NOT RAISE <class 'PermissionError'>
{% set test_to_skip = "test_append_permissions" %}

test:
  imports:
    - h5py
    - h5py._hl
    - h5py._selector
    - h5py.h5py_warnings
    - h5py._conv
    - h5py._errors
    - h5py._objects
    - h5py._proxy
    - h5py.defs
    - h5py.h5
    - h5py.h5a
    - h5py.h5d
    - h5py.h5f
    - h5py.h5fd
    - h5py.h5g
    - h5py.h5i
    - h5py.h5l
    - h5py.h5o
    - h5py.h5p
    - h5py.h5r
    - h5py.h5s
    - h5py.h5t
    - h5py.h5z
    - h5py.utils
  requires:
    - pip
    - pytest
    - pytest-mpi
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - python -c "import os,h5py; m=h5py.get_config().mpi; s=os.getenv('mpi','nompi')!='nompi'; assert m==s, f'Expected mpi={s!r}, got {m!r}'"
    - pytest -k "not {{ test_to_skip }}" --pyargs h5py.tests

about:
  home: https://www.h5py.org
  summary: The h5py package is a Pythonic interface to the HDF5 binary data format.
  license: BSD-3-Clause
  license_family: BSD
  license_file: licenses/license.txt
  description: |
    HDF5 lets you store huge amounts of numerical data, and easily manipulate that data from NumPy.
    For example, you can slice into multi-terabyte datasets stored on disk, as if they were real NumPy arrays.
    Thousands of datasets can be stored in a single file, categorized and tagged however you want.
  dev_url: https://github.com/h5py/h5py
  doc_url: https://docs.h5py.org

extra:
  recipe-maintainers:
    - jakirkham
    - tacaswell
    - ocefpaf
    - minrk
    - scopatz